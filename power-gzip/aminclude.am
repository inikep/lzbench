# Generate automatic documentation using Doxygen.
#
# The following variable is intended for use in Makefile.am:
#
# DX_CLEANFILES = everything to clean.

## --------------------------------- ##
## Format-independent Doxygen rules. ##
## --------------------------------- ##

if DX_COND_doc

## ------------------------------- ##
## Rules specific for HTML output. ##
## ------------------------------- ##

if DX_COND_html

DX_CLEAN_HTML = @DX_DOCDIR@/html

endif DX_COND_html

## ------------------------------ ##
## Rules specific for MAN output. ##
## ------------------------------ ##

if DX_COND_man

DX_CLEAN_MAN = @DX_DOCDIR@/man

endif DX_COND_man

## ------------------------------ ##
## Rules specific for PDF output. ##
## ------------------------------ ##

if DX_COND_pdf

DX_CLEAN_PDF = @DX_DOCDIR@/@PACKAGE@.pdf @DX_DOCDIR@/latex

DX_PDF_GOAL = pdf

pdf: @DX_DOCDIR@/@PACKAGE@.pdf

@DX_DOCDIR@/@PACKAGE@.pdf: @DX_DOCDIR@/@PACKAGE@.tag
	cd @DX_DOCDIR@/latex; \
	rm -f *.aux *.toc *.idx *.ind *.ilg *.log *.out; \
	$(DX_PDFLATEX) refman.tex; \
	$(DX_MAKEINDEX) refman.idx; \
	$(DX_PDFLATEX) refman.tex; \
	countdown=5; \
	while $(DX_EGREP) 'Rerun (LaTeX|to get cross-references right)' \
	                  refman.log > /dev/null 2>&1 \
	   && test $$countdown -gt 0; do \
	    $(DX_PDFLATEX) refman.tex; \
	    countdown=`expr $$countdown - 1`; \
	done; \
	mv refman.pdf ../@PACKAGE@.pdf

endif DX_COND_pdf

.PHONY: $(subdirs) doc-run doc $(DX_PDF_GOAL) $(EMPTY_AUTOMAKE_TARGETS)

.INTERMEDIATE: doc-run $(DX_PDF_GOAL)

doc-run: @DX_DOCDIR@/@PACKAGE@.tag

doc: doc-run $(DX_PDF_GOAL)

@DX_DOCDIR@/@PACKAGE@.tag: $(DX_CONFIG) $(pkginclude_HEADERS)
	for doxyfile in $(DX_CONFIG); do \
		$(DX_ENV) $(DX_DOXYGEN) $(srcdir)/$$doxyfile; \
	done

DX_CLEANFILES = \
    @DX_DOCDIR@/@PACKAGE@.tag \
    -rf \
    @DX_DOCDIR@/doxygen_sqlite3.db \
    $(DX_CLEAN_HTML) \
    $(DX_CLEAN_MAN) \
    $(DX_CLEAN_PDF)

endif DX_COND_doc
